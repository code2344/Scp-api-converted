name: Convert SCP Data

on:
  workflow_dispatch: # Allows you to manually trigger the workflow from the GitHub Actions tab
  # Uncomment the 'schedule' block below if you want it to run automatically, e.g., daily:
  # schedule:
  #   - cron: '0 0 * * *' # Runs once every day at midnight UTC

jobs:
  convert-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: write # This permission is crucial; it allows the action to push changes to your repository

    steps:
      - name: Checkout self repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean previous converted data
        run: |
          # Remove the output directory to ensure a fresh conversion and proper change detection.
          # This command is safe and won't fail if the directory doesn't exist yet.
          echo "Attempting to clean previous converted_scp_items/..."
          rm -rf converted_scp_items/
          echo "Finished cleaning."

      - name: Checkout scp-api data
        uses: actions/checkout@v4
        with:
          repository: scp-data/scp-api # Corrected repository URL
          path: scp-api-data               # This is where the scp-api repo will be cloned
          ref: main                        # Specify the branch/tag of scp-api to pull from
          fetch-depth: 1                   # ⭐ IMPORTANT: For faster cloning of the source data

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Uses the latest Python 3 version available on the runner

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4 html2text

      - name: Run SCP Conversion Script
        run: |
          echo "Running SCP conversion script..."
          python convert_scp.py --source scp-api-data/docs/data/scp/items --output converted_scp_items
          echo "Conversion script finished."
          # Optional: List contents for debugging if needed (can remove after confirmed working)
          # echo "--- Listing contents of converted_scp_items/ ---"
          # ls -laR converted_scp_items/ || echo "Directory converted_scp_items does not exist or is empty after script run."
          # echo "------------------------------------------------"

      - name: Prepare for Commit
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          
          # ⭐ IMPORTANT FIX: Add the directory to staging BEFORE checking for diffs.
          # This makes Git aware of newly created files/directories.
          git add converted_scp_items/
          echo "Staged converted_scp_items for commit."

          # Optional: Check git status for debugging (can remove after confirmed working)
          # echo "--- Checking Git status before final commit decision ---"
          # git status
          # echo "--------------------------------------------------------"

      - name: Commit and Push Changes
        run: |
          # Now, git diff --cached will check for staged changes (including new files)
          if git diff --cached --exit-code --quiet; then
            echo "No *new* changes detected in converted_scp_items to commit. Skipping commit and push."
          else
            git commit -m "Automated: Update converted SCP items from scp-api"
            git push # Pushes the changes back to your repository
            echo "Changes committed and pushed successfully!"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
